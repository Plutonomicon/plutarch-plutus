erroneous.(String, Integer) /= (String, String) {"exBudgetCPU":1073502,"exBudgetMemory":612,"scriptSizeBytes":123}
erroneous.[String] /= [Integer] {"exBudgetCPU":471493,"exBudgetMemory":388,"scriptSizeBytes":102}
erroneous.A { test := Integer, test2 := Integer } /= { test := String, test2 := Integer } {"exBudgetCPU":334985,"exBudgetMemory":356,"scriptSizeBytes":155}
erroneous.PDataSum constr 2 {"exBudgetCPU":496455,"exBudgetMemory":230,"scriptSizeBytes":225}
erroneous.PDataSum wrong record type {"exBudgetCPU":624837,"exBudgetMemory":232,"scriptSizeBytes":287}
erroneous.[ByteString] (with length == 2) /= PRational {"exBudgetCPU":1645212,"exBudgetMemory":486,"scriptSizeBytes":213}
erroneous.[Integer] (with length == 0) /= PRational {"exBudgetCPU":141548,"exBudgetMemory":196,"scriptSizeBytes":174}
erroneous.[Integer] (with length == 3) /= PRational {"exBudgetCPU":1650812,"exBudgetMemory":422,"scriptSizeBytes":220}
erroneous.[Integer] (with length == 2, with 0 denominator) /= PRational {"exBudgetCPU":1802230,"exBudgetMemory":456,"scriptSizeBytes":206}
working.(String, String) == (String, String) {"exBudgetCPU":4159141,"exBudgetMemory":14428,"scriptSizeBytes":123}
working.[String] == [String] {"exBudgetCPU":3869533,"exBudgetMemory":16604,"scriptSizeBytes":115}
working.A { test := Integer, test2 := Integer } == { test := Integer, test2 := Integer } {"exBudgetCPU":2404489,"exBudgetMemory":9776,"scriptSizeBytes":148}
working.A { test := Integer, test2 := Integer } == [Integer] {"exBudgetCPU":2404489,"exBudgetMemory":9776,"scriptSizeBytes":148}
working.A { test := String, test2 := Integer } == { test := String, test2 := Integer } {"exBudgetCPU":2443655,"exBudgetMemory":10076,"scriptSizeBytes":155}
working.PDataSum constr 0 {"exBudgetCPU":2556463,"exBudgetMemory":10522,"scriptSizeBytes":287}
working.PDataSum constr 1 {"exBudgetCPU":2860845,"exBudgetMemory":11624,"scriptSizeBytes":287}
working.recover PWrapInt {"exBudgetCPU":232476,"exBudgetMemory":1065,"scriptSizeBytes":15}
recovering a record partially vs completely.partially {"exBudgetCPU":2343513,"exBudgetMemory":9544,"scriptSizeBytes":150}
recovering a record partially vs completely.completely {"exBudgetCPU":2443655,"exBudgetMemory":10076,"scriptSizeBytes":155}
removing the data wrapper.erroneous.(String, Integer) /= (String, String) {"exBudgetCPU":1077016,"exBudgetMemory":612,"scriptSizeBytes":117}
removing the data wrapper.erroneous.[String] /= [Integer] {"exBudgetCPU":463863,"exBudgetMemory":388,"scriptSizeBytes":115}
removing the data wrapper.working.(String, String) == (String, String) {"exBudgetCPU":4159141,"exBudgetMemory":14428,"scriptSizeBytes":123}
removing the data wrapper.working.[String] == [String] {"exBudgetCPU":3869533,"exBudgetMemory":16604,"scriptSizeBytes":115}
removing the data wrapper.partial checks.check whole structure {"exBudgetCPU":136909279,"exBudgetMemory":520768,"scriptSizeBytes":1526}
removing the data wrapper.partial checks.check structure partly {"exBudgetCPU":39683889,"exBudgetMemory":145344,"scriptSizeBytes":1495}
removing the data wrapper.recovering a nested record.succeeds {"exBudgetCPU":2899778,"exBudgetMemory":11808,"scriptSizeBytes":169}
removing the data wrapper.recovering a nested record.fails {"exBudgetCPU":466135,"exBudgetMemory":420,"scriptSizeBytes":169}
removing the data wrapper.recovering a nested record.sample usage contains the right value {"exBudgetCPU":2564384,"exBudgetMemory":10649,"scriptSizeBytes":160}
example2.recovering a record succeeds {"exBudgetCPU":3567177,"exBudgetMemory":14742,"scriptSizeBytes":372}
