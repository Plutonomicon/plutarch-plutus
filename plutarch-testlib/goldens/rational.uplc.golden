literal program 1.0.0 (constr 0 [1, 2])
ops.+ program
  1.0.0
  ((\!0 ->
      (\!0 ->
         (\!0 ->
            (\!0 ->
               (\!0 ->
                  (\!0 ->
                     case
                       (!1 (constr 0 [1, 1]) (constr 0 [2, 1]))
                       [ (\!0 !0 ->
                            case
                              (!3 (constr 0 [1, 1]) (constr 0 [2, 1]))
                              [ (\!0 !0 ->
                                   !6
                                     (addInteger
                                        (multiplyInteger !4 !1)
                                        (multiplyInteger !2 !3))
                                     (multiplyInteger !3 !1)) ]) ])
                    (\!0 !0 ->
                       case
                         !2
                         [ (\!0 !0 ->
                              case
                                !3
                                [ (\!0 !0 ->
                                     (\!0 ->
                                        force
                                          (case
                                             (constr 0
                                                [ (equalsInteger !1 0)
                                                , (delay
                                                     (force
                                                        (force trace
                                                           "Cannot divide by zero"
                                                           (delay error))))
                                                , (delay
                                                     (!8
                                                        (multiplyInteger !5 !2)
                                                        !1)) ])
                                             [!11]))
                                       (multiplyInteger !3 !2)) ]) ]))
                 (\!0 !0 ->
                    (\!0 ->
                       force
                         (case
                            (constr 0
                               [ (lessThanEqualsInteger !2 0)
                               , (delay
                                    (constr 0
                                       [ (!7 (divideInteger !3 !1))
                                       , (!7 (divideInteger !2 !1)) ]))
                               , (delay
                                    (constr 0
                                       [ (divideInteger !3 !1)
                                       , (divideInteger !2 !1) ])) ])
                            [!6]))
                      ((\!0 !0 ->
                          (\!0 ->
                             (\!0 ->
                                force
                                  (case
                                     (constr 0
                                        [ (lessThanEqualsInteger !2 !1)
                                        , (delay (!7 !1 !2))
                                        , (delay (!7 !2 !1)) ])
                                     [!9]))
                               (!7 !2))
                            (!6 !2))
                         !2
                         !1)))
              ((\!0 ->
                  (\!0 -> !2 (\!0 -> !2 !2 !1)) (\!0 -> !2 (\!0 -> !2 !2 !1)))
                 (\!0 !0 !0 ->
                    force
                      (case
                         (constr 0
                            [ (equalsInteger !1 0)
                            , (delay !2)
                            , (delay (!3 !1 (modInteger !2 !1))) ])
                         [!5]))))
           (\!0 ->
              force
                (case
                   (constr 0
                      [ (lessThanEqualsInteger !1 0)
                      , (delay (!3 !1))
                      , (delay !1) ])
                   [!2])))
        (force ifThenElse))
     (\!0 -> subtractInteger 0 !1))
ops.- program
  1.0.0
  ((\!0 ->
      (\!0 ->
         (\!0 ->
            (\!0 ->
               (\!0 ->
                  (\!0 ->
                     case
                       (!1 (constr 0 [1, 1]) (constr 0 [2, 1]))
                       [ (\!0 !0 ->
                            case
                              (!3 (constr 0 [1, 1]) (constr 0 [3, 1]))
                              [ (\!0 !0 ->
                                   !6
                                     (subtractInteger
                                        (multiplyInteger !4 !1)
                                        (multiplyInteger !2 !3))
                                     (multiplyInteger !3 !1)) ]) ])
                    (\!0 !0 ->
                       case
                         !2
                         [ (\!0 !0 ->
                              case
                                !3
                                [ (\!0 !0 ->
                                     (\!0 ->
                                        force
                                          (case
                                             (constr 0
                                                [ (equalsInteger !1 0)
                                                , (delay
                                                     (force
                                                        (force trace
                                                           "Cannot divide by zero"
                                                           (delay error))))
                                                , (delay
                                                     (!8
                                                        (multiplyInteger !5 !2)
                                                        !1)) ])
                                             [!11]))
                                       (multiplyInteger !3 !2)) ]) ]))
                 (\!0 !0 ->
                    (\!0 ->
                       force
                         (case
                            (constr 0
                               [ (lessThanEqualsInteger !2 0)
                               , (delay
                                    (constr 0
                                       [ (!7 (divideInteger !3 !1))
                                       , (!7 (divideInteger !2 !1)) ]))
                               , (delay
                                    (constr 0
                                       [ (divideInteger !3 !1)
                                       , (divideInteger !2 !1) ])) ])
                            [!6]))
                      ((\!0 !0 ->
                          (\!0 ->
                             (\!0 ->
                                force
                                  (case
                                     (constr 0
                                        [ (lessThanEqualsInteger !2 !1)
                                        , (delay (!7 !1 !2))
                                        , (delay (!7 !2 !1)) ])
                                     [!9]))
                               (!7 !2))
                            (!6 !2))
                         !2
                         !1)))
              ((\!0 ->
                  (\!0 -> !2 (\!0 -> !2 !2 !1)) (\!0 -> !2 (\!0 -> !2 !2 !1)))
                 (\!0 !0 !0 ->
                    force
                      (case
                         (constr 0
                            [ (equalsInteger !1 0)
                            , (delay !2)
                            , (delay (!3 !1 (modInteger !2 !1))) ])
                         [!5]))))
           (\!0 ->
              force
                (case
                   (constr 0
                      [ (lessThanEqualsInteger !1 0)
                      , (delay (!3 !1))
                      , (delay !1) ])
                   [!2])))
        (force ifThenElse))
     (\!0 -> subtractInteger 0 !1))
ops.* program
  1.0.0
  ((\!0 ->
      (\!0 ->
         (\!0 ->
            (\!0 ->
               (\!0 ->
                  (\!0 ->
                     (\!0 ->
                        case
                          (!1
                             (constr 0 [1, 1])
                             (!2 (constr 0 [3, 1]) (constr 0 [2, 1])))
                          [ (\!0 !0 ->
                               case
                                 (!3
                                    (constr 0 [2, 1])
                                    (!4 (constr 0 [5, 1]) (constr 0 [2, 1])))
                                 [ (\!0 !0 ->
                                      !7
                                        (multiplyInteger !4 !2)
                                        (multiplyInteger !3 !1)) ]) ])
                       (\!0 !0 ->
                          case
                            !2
                            [ (\!0 !0 ->
                                 case
                                   !3
                                   [ (\!0 !0 ->
                                        !8
                                          (subtractInteger
                                             (multiplyInteger !4 !1)
                                             (multiplyInteger !2 !3))
                                          (multiplyInteger !3 !1)) ]) ]))
                    (\!0 !0 ->
                       case
                         !2
                         [ (\!0 !0 ->
                              case
                                !3
                                [ (\!0 !0 ->
                                     (\!0 ->
                                        force
                                          (case
                                             (constr 0
                                                [ (equalsInteger !1 0)
                                                , (delay
                                                     (force
                                                        (force trace
                                                           "Cannot divide by zero"
                                                           (delay error))))
                                                , (delay
                                                     (!8
                                                        (multiplyInteger !5 !2)
                                                        !1)) ])
                                             [!11]))
                                       (multiplyInteger !3 !2)) ]) ]))
                 (\!0 !0 ->
                    (\!0 ->
                       force
                         (case
                            (constr 0
                               [ (lessThanEqualsInteger !2 0)
                               , (delay
                                    (constr 0
                                       [ (!7 (divideInteger !3 !1))
                                       , (!7 (divideInteger !2 !1)) ]))
                               , (delay
                                    (constr 0
                                       [ (divideInteger !3 !1)
                                       , (divideInteger !2 !1) ])) ])
                            [!6]))
                      ((\!0 !0 ->
                          (\!0 ->
                             (\!0 ->
                                force
                                  (case
                                     (constr 0
                                        [ (lessThanEqualsInteger !2 !1)
                                        , (delay (!7 !1 !2))
                                        , (delay (!7 !2 !1)) ])
                                     [!9]))
                               (!7 !2))
                            (!6 !2))
                         !2
                         !1)))
              ((\!0 ->
                  (\!0 -> !2 (\!0 -> !2 !2 !1)) (\!0 -> !2 (\!0 -> !2 !2 !1)))
                 (\!0 !0 !0 ->
                    force
                      (case
                         (constr 0
                            [ (equalsInteger !1 0)
                            , (delay !2)
                            , (delay (!3 !1 (modInteger !2 !1))) ])
                         [!5]))))
           (\!0 ->
              force
                (case
                   (constr 0
                      [ (lessThanEqualsInteger !1 0)
                      , (delay (!3 !1))
                      , (delay !1) ])
                   [!2])))
        (force ifThenElse))
     (\!0 -> subtractInteger 0 !1))
ops.harmonic-sum program
  1.0.0
  ((\!0 ->
      (\!0 ->
         (\!0 ->
            (\!0 ->
               (\!0 ->
                  (\!0 ->
                     (\!0 ->
                        !1
                          (!1
                             (!1
                                (!2 (constr 0 [1, 1]) (constr 0 [2, 1]))
                                (!2 (constr 0 [1, 1]) (constr 0 [3, 1])))
                             (!2 (constr 0 [1, 1]) (constr 0 [4, 1])))
                          (!2 (constr 0 [1, 1]) (constr 0 [5, 1])))
                       (\!0 !0 ->
                          case
                            !2
                            [ (\!0 !0 ->
                                 case
                                   !3
                                   [ (\!0 !0 ->
                                        !8
                                          (addInteger
                                             (multiplyInteger !4 !1)
                                             (multiplyInteger !2 !3))
                                          (multiplyInteger !3 !1)) ]) ]))
                    (\!0 !0 ->
                       case
                         !2
                         [ (\!0 !0 ->
                              case
                                !3
                                [ (\!0 !0 ->
                                     (\!0 ->
                                        force
                                          (case
                                             (constr 0
                                                [ (equalsInteger !1 0)
                                                , (delay
                                                     (force
                                                        (force trace
                                                           "Cannot divide by zero"
                                                           (delay error))))
                                                , (delay
                                                     (!8
                                                        (multiplyInteger !5 !2)
                                                        !1)) ])
                                             [!11]))
                                       (multiplyInteger !3 !2)) ]) ]))
                 (\!0 !0 ->
                    (\!0 ->
                       force
                         (case
                            (constr 0
                               [ (lessThanEqualsInteger !2 0)
                               , (delay
                                    (constr 0
                                       [ (!7 (divideInteger !3 !1))
                                       , (!7 (divideInteger !2 !1)) ]))
                               , (delay
                                    (constr 0
                                       [ (divideInteger !3 !1)
                                       , (divideInteger !2 !1) ])) ])
                            [!6]))
                      ((\!0 !0 ->
                          (\!0 ->
                             (\!0 ->
                                force
                                  (case
                                     (constr 0
                                        [ (lessThanEqualsInteger !2 !1)
                                        , (delay (!7 !1 !2))
                                        , (delay (!7 !2 !1)) ])
                                     [!9]))
                               (!7 !2))
                            (!6 !2))
                         !2
                         !1)))
              ((\!0 ->
                  (\!0 -> !2 (\!0 -> !2 !2 !1)) (\!0 -> !2 (\!0 -> !2 !2 !1)))
                 (\!0 !0 !0 ->
                    force
                      (case
                         (constr 0
                            [ (equalsInteger !1 0)
                            , (delay !2)
                            , (delay (!3 !1 (modInteger !2 !1))) ])
                         [!5]))))
           (\!0 ->
              force
                (case
                   (constr 0
                      [ (lessThanEqualsInteger !1 0)
                      , (delay (!3 !1))
                      , (delay !1) ])
                   [!2])))
        (force ifThenElse))
     (\!0 -> subtractInteger 0 !1))
ops.multi-product program
  1.0.0
  ((\!0 ->
      (\!0 ->
         (\!0 ->
            (\!0 ->
               (\!0 ->
                  (\!0 ->
                     (\!0 ->
                        !2
                          (!1
                             (!2
                                (!1
                                   (!2
                                      (!1
                                         (!2
                                            (!1
                                               (!2
                                                  (constr 0 [1, 1])
                                                  (constr 0 [2, 1]))
                                               (constr 0 [2, 1]))
                                            (constr 0 [3, 1]))
                                         (constr 0 [3, 1]))
                                      (constr 0 [4, 1]))
                                   (constr 0 [4, 1]))
                                (constr 0 [5, 1]))
                             (constr 0 [5, 1]))
                          (constr 0 [6, 1]))
                       (\!0 !0 ->
                          case
                            !2
                            [ (\!0 !0 ->
                                 case
                                   !3
                                   [ (\!0 !0 ->
                                        !8
                                          (multiplyInteger !4 !2)
                                          (multiplyInteger !3 !1)) ]) ]))
                    (\!0 !0 ->
                       case
                         !2
                         [ (\!0 !0 ->
                              case
                                !3
                                [ (\!0 !0 ->
                                     (\!0 ->
                                        force
                                          (case
                                             (constr 0
                                                [ (equalsInteger !1 0)
                                                , (delay
                                                     (force
                                                        (force trace
                                                           "Cannot divide by zero"
                                                           (delay error))))
                                                , (delay
                                                     (!8
                                                        (multiplyInteger !5 !2)
                                                        !1)) ])
                                             [!11]))
                                       (multiplyInteger !3 !2)) ]) ]))
                 (\!0 !0 ->
                    (\!0 ->
                       force
                         (case
                            (constr 0
                               [ (lessThanEqualsInteger !2 0)
                               , (delay
                                    (constr 0
                                       [ (!7 (divideInteger !3 !1))
                                       , (!7 (divideInteger !2 !1)) ]))
                               , (delay
                                    (constr 0
                                       [ (divideInteger !3 !1)
                                       , (divideInteger !2 !1) ])) ])
                            [!6]))
                      ((\!0 !0 ->
                          (\!0 ->
                             (\!0 ->
                                force
                                  (case
                                     (constr 0
                                        [ (lessThanEqualsInteger !2 !1)
                                        , (delay (!7 !1 !2))
                                        , (delay (!7 !2 !1)) ])
                                     [!9]))
                               (!7 !2))
                            (!6 !2))
                         !2
                         !1)))
              ((\!0 ->
                  (\!0 -> !2 (\!0 -> !2 !2 !1)) (\!0 -> !2 (\!0 -> !2 !2 !1)))
                 (\!0 !0 !0 ->
                    force
                      (case
                         (constr 0
                            [ (equalsInteger !1 0)
                            , (delay !2)
                            , (delay (!3 !1 (modInteger !2 !1))) ])
                         [!5]))))
           (\!0 ->
              force
                (case
                   (constr 0
                      [ (lessThanEqualsInteger !1 0)
                      , (delay (!3 !1))
                      , (delay !1) ])
                   [!2])))
        (force ifThenElse))
     (\!0 -> subtractInteger 0 !1))
ops.abs program
  1.0.0
  ((\!0 ->
      (\!0 ->
         (\!0 ->
            (\!0 ->
               case
                 (case
                    (constr 0 [-1, 1])
                    [ (\!0 !0 ->
                         case
                           (constr 0 [2, 1])
                           [ (\!0 !0 ->
                                (\!0 ->
                                   force
                                     (case
                                        (constr 0
                                           [ (equalsInteger !1 0)
                                           , (delay
                                                (force
                                                   (force trace
                                                      "Cannot divide by zero"
                                                      (delay error))))
                                           , (delay
                                                ((\!0 ->
                                                    (\!0 ->
                                                       force
                                                         (case
                                                            (constr 0
                                                               [ (lessThanEqualsInteger
                                                                    !3
                                                                    0)
                                                               , (delay
                                                                    (constr 0
                                                                       [ (!11
                                                                            (divideInteger
                                                                               !2
                                                                               !1))
                                                                       , (!11
                                                                            (divideInteger
                                                                               !3
                                                                               !1)) ]))
                                                               , (delay
                                                                    (constr 0
                                                                       [ (divideInteger
                                                                            !2
                                                                            !1)
                                                                       , (divideInteger
                                                                            !3
                                                                            !1) ])) ])
                                                            [!10]))
                                                      ((\!0 ->
                                                          (\!0 ->
                                                             force
                                                               (case
                                                                  (constr 0
                                                                     [ (lessThanEqualsInteger
                                                                          !2
                                                                          !1)
                                                                     , (delay
                                                                          (!9
                                                                             !1
                                                                             !2))
                                                                     , (delay
                                                                          (!9
                                                                             !2
                                                                             !1)) ])
                                                                  [!11]))
                                                            (!9 !3))
                                                         (!8 !1)))
                                                   (multiplyInteger !5 !2))) ])
                                        [!8]))
                                  (multiplyInteger !3 !2)) ]) ])
                 [(\!0 !0 -> constr 0 [(!4 !2), !1])])
              ((\!0 ->
                  (\!0 -> !2 (\!0 -> !2 !2 !1)) (\!0 -> !2 (\!0 -> !2 !2 !1)))
                 (\!0 !0 !0 ->
                    force
                      (case
                         (constr 0
                            [ (equalsInteger !1 0)
                            , (delay !2)
                            , (delay (!3 !1 (modInteger !2 !1))) ])
                         [!5]))))
           (\!0 ->
              force
                (case
                   (constr 0
                      [ (lessThanEqualsInteger !1 0)
                      , (delay (!3 !1))
                      , (delay !1) ])
                   [!2])))
        (force ifThenElse))
     (\!0 -> subtractInteger 0 !1))
ops.signum program
  1.0.0
  ((\!0 ->
      (\!0 ->
         (\!0 ->
            (\!0 ->
               case
                 (case
                    (constr 0 [-1, 1])
                    [ (\!0 !0 ->
                         case
                           (constr 0 [2, 1])
                           [ (\!0 !0 ->
                                (\!0 ->
                                   force
                                     (case
                                        (constr 0
                                           [ (equalsInteger !1 0)
                                           , (delay
                                                (force
                                                   (force trace
                                                      "Cannot divide by zero"
                                                      (delay error))))
                                           , (delay
                                                ((\!0 ->
                                                    (\!0 ->
                                                       force
                                                         (case
                                                            (constr 0
                                                               [ (lessThanEqualsInteger
                                                                    !3
                                                                    0)
                                                               , (delay
                                                                    (constr 0
                                                                       [ (!11
                                                                            (divideInteger
                                                                               !2
                                                                               !1))
                                                                       , (!11
                                                                            (divideInteger
                                                                               !3
                                                                               !1)) ]))
                                                               , (delay
                                                                    (constr 0
                                                                       [ (divideInteger
                                                                            !2
                                                                            !1)
                                                                       , (divideInteger
                                                                            !3
                                                                            !1) ])) ])
                                                            [!10]))
                                                      ((\!0 ->
                                                          (\!0 ->
                                                             force
                                                               (case
                                                                  (constr 0
                                                                     [ (lessThanEqualsInteger
                                                                          !2
                                                                          !1)
                                                                     , (delay
                                                                          (!9
                                                                             !1
                                                                             !2))
                                                                     , (delay
                                                                          (!9
                                                                             !2
                                                                             !1)) ])
                                                                  [!11]))
                                                            (!9 !3))
                                                         (!8 !1)))
                                                   (multiplyInteger !5 !2))) ])
                                        [!8]))
                                  (multiplyInteger !3 !2)) ]) ])
                 [ (\!0 !0 ->
                      force
                        (case
                           (constr 0
                              [ (equalsInteger !2 0)
                              , (delay (constr 0 [0, 1]))
                              , (delay
                                   (force
                                      (case
                                         (constr 0
                                            [ (lessThanEqualsInteger !2 0)
                                            , (delay (constr 0 [-1, 1]))
                                            , (delay (constr 0 [1, 1])) ])
                                         [!5]))) ])
                           [!5])) ])
              ((\!0 ->
                  (\!0 -> !2 (\!0 -> !2 !2 !1)) (\!0 -> !2 (\!0 -> !2 !2 !1)))
                 (\!0 !0 !0 ->
                    force
                      (case
                         (constr 0
                            [ (equalsInteger !1 0)
                            , (delay !2)
                            , (delay (!3 !1 (modInteger !2 !1))) ])
                         [!5]))))
           (\!0 ->
              force
                (case
                   (constr 0
                      [ (lessThanEqualsInteger !1 0)
                      , (delay (!3 !1))
                      , (delay !1) ])
                   [!2])))
        (force ifThenElse))
     (\!0 -> subtractInteger 0 !1))
compare program
  1.0.0
  ((\!0 ->
      (\!0 ->
         (\!0 ->
            (\!0 ->
               (\!0 ->
                  case
                    (!1 (constr 0 [2, 1]) (constr 0 [9, 1]))
                    [ (\!0 !0 ->
                         case
                           (!3 (constr 0 [3, 1]) (constr 0 [10, 1]))
                           [ (\!0 !0 ->
                                lessThanInteger
                                  (multiplyInteger !1 !4)
                                  (multiplyInteger !2 !3)) ]) ])
                 (\!0 !0 ->
                    case
                      !2
                      [ (\!0 !0 ->
                           case
                             !3
                             [ (\!0 !0 ->
                                  (\!0 ->
                                     force
                                       (case
                                          (constr 0
                                             [ (equalsInteger !1 0)
                                             , (delay
                                                  (force
                                                     (force trace
                                                        "Cannot divide by zero"
                                                        (delay error))))
                                             , (delay
                                                  ((\!0 !0 ->
                                                      (\!0 ->
                                                         force
                                                           (case
                                                              (constr 0
                                                                 [ (lessThanEqualsInteger
                                                                      !2
                                                                      0)
                                                                 , (delay
                                                                      (constr 0
                                                                         [ (!14
                                                                              (divideInteger
                                                                                 !3
                                                                                 !1))
                                                                         , (!14
                                                                              (divideInteger
                                                                                 !2
                                                                                 !1)) ]))
                                                                 , (delay
                                                                      (constr 0
                                                                         [ (divideInteger
                                                                              !3
                                                                              !1)
                                                                         , (divideInteger
                                                                              !2
                                                                              !1) ])) ])
                                                              [!13]))
                                                        ((\!0 !0 ->
                                                            (\!0 ->
                                                               (\!0 ->
                                                                  force
                                                                    (case
                                                                       (constr 0
                                                                          [ (lessThanEqualsInteger
                                                                               !2
                                                                               !1)
                                                                          , (delay
                                                                               (!14
                                                                                  !1
                                                                                  !2))
                                                                          , (delay
                                                                               (!14
                                                                                  !2
                                                                                  !1)) ])
                                                                       [!16]))
                                                                 (!14 !2))
                                                              (!13 !2))
                                                           !2
                                                           !1))
                                                     (multiplyInteger !5 !2)
                                                     !1)) ])
                                          [!10]))
                                    (multiplyInteger !3 !2)) ]) ]))
              ((\!0 ->
                  (\!0 -> !2 (\!0 -> !2 !2 !1)) (\!0 -> !2 (\!0 -> !2 !2 !1)))
                 (\!0 !0 !0 ->
                    force
                      (case
                         (constr 0
                            [ (equalsInteger !1 0)
                            , (delay !2)
                            , (delay (!3 !1 (modInteger !2 !1))) ])
                         [!5]))))
           (\!0 ->
              force
                (case
                   (constr 0
                      [ (lessThanEqualsInteger !1 0)
                      , (delay (!3 !1))
                      , (delay !1) ])
                   [!2])))
        (force ifThenElse))
     (\!0 -> subtractInteger 0 !1))
round.5/3 program
  1.0.0
  ((\!0 ->
      (\!0 ->
         (\!0 ->
            (\!0 ->
               case
                 (case
                    (constr 0 [5, 1])
                    [ (\!0 !0 ->
                         case
                           (constr 0 [3, 1])
                           [ (\!0 !0 ->
                                (\!0 ->
                                   force
                                     (case
                                        (constr 0
                                           [ (equalsInteger !1 0)
                                           , (delay
                                                (force
                                                   (force trace
                                                      "Cannot divide by zero"
                                                      (delay error))))
                                           , (delay
                                                ((\!0 ->
                                                    (\!0 ->
                                                       force
                                                         (case
                                                            (constr 0
                                                               [ (lessThanEqualsInteger
                                                                    !3
                                                                    0)
                                                               , (delay
                                                                    (constr 0
                                                                       [ (!11
                                                                            (divideInteger
                                                                               !2
                                                                               !1))
                                                                       , (!11
                                                                            (divideInteger
                                                                               !3
                                                                               !1)) ]))
                                                               , (delay
                                                                    (constr 0
                                                                       [ (divideInteger
                                                                            !2
                                                                            !1)
                                                                       , (divideInteger
                                                                            !3
                                                                            !1) ])) ])
                                                            [!10]))
                                                      ((\!0 ->
                                                          (\!0 ->
                                                             force
                                                               (case
                                                                  (constr 0
                                                                     [ (lessThanEqualsInteger
                                                                          !2
                                                                          !1)
                                                                     , (delay
                                                                          (!9
                                                                             !1
                                                                             !2))
                                                                     , (delay
                                                                          (!9
                                                                             !2
                                                                             !1)) ])
                                                                  [!11]))
                                                            (!9 !3))
                                                         (!8 !1)))
                                                   (multiplyInteger !5 !2))) ])
                                        [!8]))
                                  (multiplyInteger !3 !2)) ]) ])
                 [ (\!0 !0 ->
                      (\!0 ->
                         (\!0 ->
                            addInteger
                              !2
                              (force
                                 (case
                                    (constr 0
                                       [ (equalsInteger (modInteger !3 2) 1)
                                       , (delay
                                            (force
                                               (case
                                                  (constr 0
                                                     [ (lessThanInteger
                                                          (divideInteger !3 2)
                                                          !1)
                                                     , (delay 1)
                                                     , (delay 0) ])
                                                  [!7])))
                                       , (delay
                                            (force
                                               (case
                                                  (constr 0
                                                     [ (equalsInteger
                                                          (divideInteger !3 2)
                                                          !1)
                                                     , (delay (modInteger !2 2))
                                                     , (delay
                                                          (force
                                                             (case
                                                                (constr 0
                                                                   [ (lessThanInteger
                                                                        !1
                                                                        (divideInteger
                                                                           !3
                                                                           2))
                                                                   , (delay 0)
                                                                   , (delay
                                                                        1) ])
                                                                [!7]))) ])
                                                  [!7]))) ])
                                    [!7])))
                           (modInteger !3 !2))
                        (divideInteger !2 !1)) ])
              ((\!0 ->
                  (\!0 -> !2 (\!0 -> !2 !2 !1)) (\!0 -> !2 (\!0 -> !2 !2 !1)))
                 (\!0 !0 !0 ->
                    force
                      (case
                         (constr 0
                            [ (equalsInteger !1 0)
                            , (delay !2)
                            , (delay (!3 !1 (modInteger !2 !1))) ])
                         [!5]))))
           (\!0 ->
              force
                (case
                   (constr 0
                      [ (lessThanEqualsInteger !1 0)
                      , (delay (!3 !1))
                      , (delay !1) ])
                   [!2])))
        (force ifThenElse))
     (\!0 -> subtractInteger 0 !1))
round.4/3 program
  1.0.0
  ((\!0 ->
      (\!0 ->
         (\!0 ->
            (\!0 ->
               case
                 (case
                    (constr 0 [4, 1])
                    [ (\!0 !0 ->
                         case
                           (constr 0 [3, 1])
                           [ (\!0 !0 ->
                                (\!0 ->
                                   force
                                     (case
                                        (constr 0
                                           [ (equalsInteger !1 0)
                                           , (delay
                                                (force
                                                   (force trace
                                                      "Cannot divide by zero"
                                                      (delay error))))
                                           , (delay
                                                ((\!0 ->
                                                    (\!0 ->
                                                       force
                                                         (case
                                                            (constr 0
                                                               [ (lessThanEqualsInteger
                                                                    !3
                                                                    0)
                                                               , (delay
                                                                    (constr 0
                                                                       [ (!11
                                                                            (divideInteger
                                                                               !2
                                                                               !1))
                                                                       , (!11
                                                                            (divideInteger
                                                                               !3
                                                                               !1)) ]))
                                                               , (delay
                                                                    (constr 0
                                                                       [ (divideInteger
                                                                            !2
                                                                            !1)
                                                                       , (divideInteger
                                                                            !3
                                                                            !1) ])) ])
                                                            [!10]))
                                                      ((\!0 ->
                                                          (\!0 ->
                                                             force
                                                               (case
                                                                  (constr 0
                                                                     [ (lessThanEqualsInteger
                                                                          !2
                                                                          !1)
                                                                     , (delay
                                                                          (!9
                                                                             !1
                                                                             !2))
                                                                     , (delay
                                                                          (!9
                                                                             !2
                                                                             !1)) ])
                                                                  [!11]))
                                                            (!9 !3))
                                                         (!8 !1)))
                                                   (multiplyInteger !5 !2))) ])
                                        [!8]))
                                  (multiplyInteger !3 !2)) ]) ])
                 [ (\!0 !0 ->
                      (\!0 ->
                         (\!0 ->
                            addInteger
                              !2
                              (force
                                 (case
                                    (constr 0
                                       [ (equalsInteger (modInteger !3 2) 1)
                                       , (delay
                                            (force
                                               (case
                                                  (constr 0
                                                     [ (lessThanInteger
                                                          (divideInteger !3 2)
                                                          !1)
                                                     , (delay 1)
                                                     , (delay 0) ])
                                                  [!7])))
                                       , (delay
                                            (force
                                               (case
                                                  (constr 0
                                                     [ (equalsInteger
                                                          (divideInteger !3 2)
                                                          !1)
                                                     , (delay (modInteger !2 2))
                                                     , (delay
                                                          (force
                                                             (case
                                                                (constr 0
                                                                   [ (lessThanInteger
                                                                        !1
                                                                        (divideInteger
                                                                           !3
                                                                           2))
                                                                   , (delay 0)
                                                                   , (delay
                                                                        1) ])
                                                                [!7]))) ])
                                                  [!7]))) ])
                                    [!7])))
                           (modInteger !3 !2))
                        (divideInteger !2 !1)) ])
              ((\!0 ->
                  (\!0 -> !2 (\!0 -> !2 !2 !1)) (\!0 -> !2 (\!0 -> !2 !2 !1)))
                 (\!0 !0 !0 ->
                    force
                      (case
                         (constr 0
                            [ (equalsInteger !1 0)
                            , (delay !2)
                            , (delay (!3 !1 (modInteger !2 !1))) ])
                         [!5]))))
           (\!0 ->
              force
                (case
                   (constr 0
                      [ (lessThanEqualsInteger !1 0)
                      , (delay (!3 !1))
                      , (delay !1) ])
                   [!2])))
        (force ifThenElse))
     (\!0 -> subtractInteger 0 !1))
round.-5/2 program
  1.0.0
  ((\!0 ->
      (\!0 ->
         (\!0 ->
            (\!0 ->
               case
                 (case
                    (constr 0 [-5, 1])
                    [ (\!0 !0 ->
                         case
                           (constr 0 [2, 1])
                           [ (\!0 !0 ->
                                (\!0 ->
                                   force
                                     (case
                                        (constr 0
                                           [ (equalsInteger !1 0)
                                           , (delay
                                                (force
                                                   (force trace
                                                      "Cannot divide by zero"
                                                      (delay error))))
                                           , (delay
                                                ((\!0 ->
                                                    (\!0 ->
                                                       force
                                                         (case
                                                            (constr 0
                                                               [ (lessThanEqualsInteger
                                                                    !3
                                                                    0)
                                                               , (delay
                                                                    (constr 0
                                                                       [ (!11
                                                                            (divideInteger
                                                                               !2
                                                                               !1))
                                                                       , (!11
                                                                            (divideInteger
                                                                               !3
                                                                               !1)) ]))
                                                               , (delay
                                                                    (constr 0
                                                                       [ (divideInteger
                                                                            !2
                                                                            !1)
                                                                       , (divideInteger
                                                                            !3
                                                                            !1) ])) ])
                                                            [!10]))
                                                      ((\!0 ->
                                                          (\!0 ->
                                                             force
                                                               (case
                                                                  (constr 0
                                                                     [ (lessThanEqualsInteger
                                                                          !2
                                                                          !1)
                                                                     , (delay
                                                                          (!9
                                                                             !1
                                                                             !2))
                                                                     , (delay
                                                                          (!9
                                                                             !2
                                                                             !1)) ])
                                                                  [!11]))
                                                            (!9 !3))
                                                         (!8 !1)))
                                                   (multiplyInteger !5 !2))) ])
                                        [!8]))
                                  (multiplyInteger !3 !2)) ]) ])
                 [ (\!0 !0 ->
                      (\!0 ->
                         (\!0 ->
                            addInteger
                              !2
                              (force
                                 (case
                                    (constr 0
                                       [ (equalsInteger (modInteger !3 2) 1)
                                       , (delay
                                            (force
                                               (case
                                                  (constr 0
                                                     [ (lessThanInteger
                                                          (divideInteger !3 2)
                                                          !1)
                                                     , (delay 1)
                                                     , (delay 0) ])
                                                  [!7])))
                                       , (delay
                                            (force
                                               (case
                                                  (constr 0
                                                     [ (equalsInteger
                                                          (divideInteger !3 2)
                                                          !1)
                                                     , (delay (modInteger !2 2))
                                                     , (delay
                                                          (force
                                                             (case
                                                                (constr 0
                                                                   [ (lessThanInteger
                                                                        !1
                                                                        (divideInteger
                                                                           !3
                                                                           2))
                                                                   , (delay 0)
                                                                   , (delay
                                                                        1) ])
                                                                [!7]))) ])
                                                  [!7]))) ])
                                    [!7])))
                           (modInteger !3 !2))
                        (divideInteger !2 !1)) ])
              ((\!0 ->
                  (\!0 -> !2 (\!0 -> !2 !2 !1)) (\!0 -> !2 (\!0 -> !2 !2 !1)))
                 (\!0 !0 !0 ->
                    force
                      (case
                         (constr 0
                            [ (equalsInteger !1 0)
                            , (delay !2)
                            , (delay (!3 !1 (modInteger !2 !1))) ])
                         [!5]))))
           (\!0 ->
              force
                (case
                   (constr 0
                      [ (lessThanEqualsInteger !1 0)
                      , (delay (!3 !1))
                      , (delay !1) ])
                   [!2])))
        (force ifThenElse))
     (\!0 -> subtractInteger 0 !1))
round.-1/4 program
  1.0.0
  ((\!0 ->
      (\!0 ->
         (\!0 ->
            (\!0 ->
               case
                 (case
                    (constr 0 [-1, 1])
                    [ (\!0 !0 ->
                         case
                           (constr 0 [4, 1])
                           [ (\!0 !0 ->
                                (\!0 ->
                                   force
                                     (case
                                        (constr 0
                                           [ (equalsInteger !1 0)
                                           , (delay
                                                (force
                                                   (force trace
                                                      "Cannot divide by zero"
                                                      (delay error))))
                                           , (delay
                                                ((\!0 ->
                                                    (\!0 ->
                                                       force
                                                         (case
                                                            (constr 0
                                                               [ (lessThanEqualsInteger
                                                                    !3
                                                                    0)
                                                               , (delay
                                                                    (constr 0
                                                                       [ (!11
                                                                            (divideInteger
                                                                               !2
                                                                               !1))
                                                                       , (!11
                                                                            (divideInteger
                                                                               !3
                                                                               !1)) ]))
                                                               , (delay
                                                                    (constr 0
                                                                       [ (divideInteger
                                                                            !2
                                                                            !1)
                                                                       , (divideInteger
                                                                            !3
                                                                            !1) ])) ])
                                                            [!10]))
                                                      ((\!0 ->
                                                          (\!0 ->
                                                             force
                                                               (case
                                                                  (constr 0
                                                                     [ (lessThanEqualsInteger
                                                                          !2
                                                                          !1)
                                                                     , (delay
                                                                          (!9
                                                                             !1
                                                                             !2))
                                                                     , (delay
                                                                          (!9
                                                                             !2
                                                                             !1)) ])
                                                                  [!11]))
                                                            (!9 !3))
                                                         (!8 !1)))
                                                   (multiplyInteger !5 !2))) ])
                                        [!8]))
                                  (multiplyInteger !3 !2)) ]) ])
                 [ (\!0 !0 ->
                      (\!0 ->
                         (\!0 ->
                            addInteger
                              !2
                              (force
                                 (case
                                    (constr 0
                                       [ (equalsInteger (modInteger !3 2) 1)
                                       , (delay
                                            (force
                                               (case
                                                  (constr 0
                                                     [ (lessThanInteger
                                                          (divideInteger !3 2)
                                                          !1)
                                                     , (delay 1)
                                                     , (delay 0) ])
                                                  [!7])))
                                       , (delay
                                            (force
                                               (case
                                                  (constr 0
                                                     [ (equalsInteger
                                                          (divideInteger !3 2)
                                                          !1)
                                                     , (delay (modInteger !2 2))
                                                     , (delay
                                                          (force
                                                             (case
                                                                (constr 0
                                                                   [ (lessThanInteger
                                                                        !1
                                                                        (divideInteger
                                                                           !3
                                                                           2))
                                                                   , (delay 0)
                                                                   , (delay
                                                                        1) ])
                                                                [!7]))) ])
                                                  [!7]))) ])
                                    [!7])))
                           (modInteger !3 !2))
                        (divideInteger !2 !1)) ])
              ((\!0 ->
                  (\!0 -> !2 (\!0 -> !2 !2 !1)) (\!0 -> !2 (\!0 -> !2 !2 !1)))
                 (\!0 !0 !0 ->
                    force
                      (case
                         (constr 0
                            [ (equalsInteger !1 0)
                            , (delay !2)
                            , (delay (!3 !1 (modInteger !2 !1))) ])
                         [!5]))))
           (\!0 ->
              force
                (case
                   (constr 0
                      [ (lessThanEqualsInteger !1 0)
                      , (delay (!3 !1))
                      , (delay !1) ])
                   [!2])))
        (force ifThenElse))
     (\!0 -> subtractInteger 0 !1))
truncate.5/4 program
  1.0.0
  ((\!0 ->
      (\!0 ->
         (\!0 ->
            (\!0 ->
               case
                 (case
                    (constr 0 [5, 1])
                    [ (\!0 !0 ->
                         case
                           (constr 0 [4, 1])
                           [ (\!0 !0 ->
                                (\!0 ->
                                   force
                                     (case
                                        (constr 0
                                           [ (equalsInteger !1 0)
                                           , (delay
                                                (force
                                                   (force trace
                                                      "Cannot divide by zero"
                                                      (delay error))))
                                           , (delay
                                                ((\!0 ->
                                                    (\!0 ->
                                                       force
                                                         (case
                                                            (constr 0
                                                               [ (lessThanEqualsInteger
                                                                    !3
                                                                    0)
                                                               , (delay
                                                                    (constr 0
                                                                       [ (!11
                                                                            (divideInteger
                                                                               !2
                                                                               !1))
                                                                       , (!11
                                                                            (divideInteger
                                                                               !3
                                                                               !1)) ]))
                                                               , (delay
                                                                    (constr 0
                                                                       [ (divideInteger
                                                                            !2
                                                                            !1)
                                                                       , (divideInteger
                                                                            !3
                                                                            !1) ])) ])
                                                            [!10]))
                                                      ((\!0 ->
                                                          (\!0 ->
                                                             force
                                                               (case
                                                                  (constr 0
                                                                     [ (lessThanEqualsInteger
                                                                          !2
                                                                          !1)
                                                                     , (delay
                                                                          (!9
                                                                             !1
                                                                             !2))
                                                                     , (delay
                                                                          (!9
                                                                             !2
                                                                             !1)) ])
                                                                  [!11]))
                                                            (!9 !3))
                                                         (!8 !1)))
                                                   (multiplyInteger !5 !2))) ])
                                        [!8]))
                                  (multiplyInteger !3 !2)) ]) ])
                 [quotientInteger])
              ((\!0 ->
                  (\!0 -> !2 (\!0 -> !2 !2 !1)) (\!0 -> !2 (\!0 -> !2 !2 !1)))
                 (\!0 !0 !0 ->
                    force
                      (case
                         (constr 0
                            [ (equalsInteger !1 0)
                            , (delay !2)
                            , (delay (!3 !1 (modInteger !2 !1))) ])
                         [!5]))))
           (\!0 ->
              force
                (case
                   (constr 0
                      [ (lessThanEqualsInteger !1 0)
                      , (delay (!3 !1))
                      , (delay !1) ])
                   [!2])))
        (force ifThenElse))
     (\!0 -> subtractInteger 0 !1))
truncate.7/4 program
  1.0.0
  ((\!0 ->
      (\!0 ->
         (\!0 ->
            (\!0 ->
               case
                 (case
                    (constr 0 [7, 1])
                    [ (\!0 !0 ->
                         case
                           (constr 0 [4, 1])
                           [ (\!0 !0 ->
                                (\!0 ->
                                   force
                                     (case
                                        (constr 0
                                           [ (equalsInteger !1 0)
                                           , (delay
                                                (force
                                                   (force trace
                                                      "Cannot divide by zero"
                                                      (delay error))))
                                           , (delay
                                                ((\!0 ->
                                                    (\!0 ->
                                                       force
                                                         (case
                                                            (constr 0
                                                               [ (lessThanEqualsInteger
                                                                    !3
                                                                    0)
                                                               , (delay
                                                                    (constr 0
                                                                       [ (!11
                                                                            (divideInteger
                                                                               !2
                                                                               !1))
                                                                       , (!11
                                                                            (divideInteger
                                                                               !3
                                                                               !1)) ]))
                                                               , (delay
                                                                    (constr 0
                                                                       [ (divideInteger
                                                                            !2
                                                                            !1)
                                                                       , (divideInteger
                                                                            !3
                                                                            !1) ])) ])
                                                            [!10]))
                                                      ((\!0 ->
                                                          (\!0 ->
                                                             force
                                                               (case
                                                                  (constr 0
                                                                     [ (lessThanEqualsInteger
                                                                          !2
                                                                          !1)
                                                                     , (delay
                                                                          (!9
                                                                             !1
                                                                             !2))
                                                                     , (delay
                                                                          (!9
                                                                             !2
                                                                             !1)) ])
                                                                  [!11]))
                                                            (!9 !3))
                                                         (!8 !1)))
                                                   (multiplyInteger !5 !2))) ])
                                        [!8]))
                                  (multiplyInteger !3 !2)) ]) ])
                 [quotientInteger])
              ((\!0 ->
                  (\!0 -> !2 (\!0 -> !2 !2 !1)) (\!0 -> !2 (\!0 -> !2 !2 !1)))
                 (\!0 !0 !0 ->
                    force
                      (case
                         (constr 0
                            [ (equalsInteger !1 0)
                            , (delay !2)
                            , (delay (!3 !1 (modInteger !2 !1))) ])
                         [!5]))))
           (\!0 ->
              force
                (case
                   (constr 0
                      [ (lessThanEqualsInteger !1 0)
                      , (delay (!3 !1))
                      , (delay !1) ])
                   [!2])))
        (force ifThenElse))
     (\!0 -> subtractInteger 0 !1))
truncate.1/4 program
  1.0.0
  ((\!0 ->
      (\!0 ->
         (\!0 ->
            (\!0 ->
               case
                 (case
                    (constr 0 [1, 1])
                    [ (\!0 !0 ->
                         case
                           (constr 0 [4, 1])
                           [ (\!0 !0 ->
                                (\!0 ->
                                   force
                                     (case
                                        (constr 0
                                           [ (equalsInteger !1 0)
                                           , (delay
                                                (force
                                                   (force trace
                                                      "Cannot divide by zero"
                                                      (delay error))))
                                           , (delay
                                                ((\!0 ->
                                                    (\!0 ->
                                                       force
                                                         (case
                                                            (constr 0
                                                               [ (lessThanEqualsInteger
                                                                    !3
                                                                    0)
                                                               , (delay
                                                                    (constr 0
                                                                       [ (!11
                                                                            (divideInteger
                                                                               !2
                                                                               !1))
                                                                       , (!11
                                                                            (divideInteger
                                                                               !3
                                                                               !1)) ]))
                                                               , (delay
                                                                    (constr 0
                                                                       [ (divideInteger
                                                                            !2
                                                                            !1)
                                                                       , (divideInteger
                                                                            !3
                                                                            !1) ])) ])
                                                            [!10]))
                                                      ((\!0 ->
                                                          (\!0 ->
                                                             force
                                                               (case
                                                                  (constr 0
                                                                     [ (lessThanEqualsInteger
                                                                          !2
                                                                          !1)
                                                                     , (delay
                                                                          (!9
                                                                             !1
                                                                             !2))
                                                                     , (delay
                                                                          (!9
                                                                             !2
                                                                             !1)) ])
                                                                  [!11]))
                                                            (!9 !3))
                                                         (!8 !1)))
                                                   (multiplyInteger !5 !2))) ])
                                        [!8]))
                                  (multiplyInteger !3 !2)) ]) ])
                 [quotientInteger])
              ((\!0 ->
                  (\!0 -> !2 (\!0 -> !2 !2 !1)) (\!0 -> !2 (\!0 -> !2 !2 !1)))
                 (\!0 !0 !0 ->
                    force
                      (case
                         (constr 0
                            [ (equalsInteger !1 0)
                            , (delay !2)
                            , (delay (!3 !1 (modInteger !2 !1))) ])
                         [!5]))))
           (\!0 ->
              force
                (case
                   (constr 0
                      [ (lessThanEqualsInteger !1 0)
                      , (delay (!3 !1))
                      , (delay !1) ])
                   [!2])))
        (force ifThenElse))
     (\!0 -> subtractInteger 0 !1))
truncate.-7/4 program
  1.0.0
  ((\!0 ->
      (\!0 ->
         (\!0 ->
            (\!0 ->
               case
                 (case
                    (constr 0 [-7, 1])
                    [ (\!0 !0 ->
                         case
                           (constr 0 [4, 1])
                           [ (\!0 !0 ->
                                (\!0 ->
                                   force
                                     (case
                                        (constr 0
                                           [ (equalsInteger !1 0)
                                           , (delay
                                                (force
                                                   (force trace
                                                      "Cannot divide by zero"
                                                      (delay error))))
                                           , (delay
                                                ((\!0 ->
                                                    (\!0 ->
                                                       force
                                                         (case
                                                            (constr 0
                                                               [ (lessThanEqualsInteger
                                                                    !3
                                                                    0)
                                                               , (delay
                                                                    (constr 0
                                                                       [ (!11
                                                                            (divideInteger
                                                                               !2
                                                                               !1))
                                                                       , (!11
                                                                            (divideInteger
                                                                               !3
                                                                               !1)) ]))
                                                               , (delay
                                                                    (constr 0
                                                                       [ (divideInteger
                                                                            !2
                                                                            !1)
                                                                       , (divideInteger
                                                                            !3
                                                                            !1) ])) ])
                                                            [!10]))
                                                      ((\!0 ->
                                                          (\!0 ->
                                                             force
                                                               (case
                                                                  (constr 0
                                                                     [ (lessThanEqualsInteger
                                                                          !2
                                                                          !1)
                                                                     , (delay
                                                                          (!9
                                                                             !1
                                                                             !2))
                                                                     , (delay
                                                                          (!9
                                                                             !2
                                                                             !1)) ])
                                                                  [!11]))
                                                            (!9 !3))
                                                         (!8 !1)))
                                                   (multiplyInteger !5 !2))) ])
                                        [!8]))
                                  (multiplyInteger !3 !2)) ]) ])
                 [quotientInteger])
              ((\!0 ->
                  (\!0 -> !2 (\!0 -> !2 !2 !1)) (\!0 -> !2 (\!0 -> !2 !2 !1)))
                 (\!0 !0 !0 ->
                    force
                      (case
                         (constr 0
                            [ (equalsInteger !1 0)
                            , (delay !2)
                            , (delay (!3 !1 (modInteger !2 !1))) ])
                         [!5]))))
           (\!0 ->
              force
                (case
                   (constr 0
                      [ (lessThanEqualsInteger !1 0)
                      , (delay (!3 !1))
                      , (delay !1) ])
                   [!2])))
        (force ifThenElse))
     (\!0 -> subtractInteger 0 !1))
properFraction.-1/2 program
  1.0.0
  ((\!0 ->
      (\!0 ->
         (\!0 ->
            (\!0 ->
               (\!0 ->
                  (\!0 ->
                     case
                       ((\!0 ->
                           (\!0 ->
                              constr 0
                                [ !1
                                , (case
                                     !2
                                     [ (\!0 !0 ->
                                          case
                                            (constr 0 [!3, 1])
                                            [ (\!0 !0 ->
                                                 !8
                                                   (subtractInteger
                                                      (multiplyInteger !4 !1)
                                                      (multiplyInteger !2 !3))
                                                   (multiplyInteger
                                                      !3
                                                      !1)) ]) ]) ])
                             (case !1 [quotientInteger]))
                          (!1 (constr 0 [-1, 1]) (constr 0 [2, 1])))
                       [ (\!0 !0 ->
                            force
                              (case
                                 (constr 0
                                    [ (equalsInteger !2 0)
                                    , (delay
                                         (case
                                            !1
                                            [ (\!0 !0 ->
                                                 case
                                                   (!5
                                                      (constr 0 [-1, 1])
                                                      (constr 0 [2, 1]))
                                                   [ (\!0 !0 ->
                                                        equalsInteger
                                                          (multiplyInteger
                                                             !1
                                                             !4)
                                                          (multiplyInteger
                                                             !2
                                                             !3)) ]) ]))
                                    , (delay False) ])
                                 [!7])) ])
                    (\!0 !0 ->
                       case
                         !2
                         [ (\!0 !0 ->
                              case
                                !3
                                [ (\!0 !0 ->
                                     (\!0 ->
                                        force
                                          (case
                                             (constr 0
                                                [ (equalsInteger !1 0)
                                                , (delay
                                                     (force
                                                        (force trace
                                                           "Cannot divide by zero"
                                                           (delay error))))
                                                , (delay
                                                     (!8
                                                        (multiplyInteger !5 !2)
                                                        !1)) ])
                                             [!11]))
                                       (multiplyInteger !3 !2)) ]) ]))
                 (\!0 !0 ->
                    (\!0 ->
                       force
                         (case
                            (constr 0
                               [ (lessThanEqualsInteger !2 0)
                               , (delay
                                    (constr 0
                                       [ (!7 (divideInteger !3 !1))
                                       , (!7 (divideInteger !2 !1)) ]))
                               , (delay
                                    (constr 0
                                       [ (divideInteger !3 !1)
                                       , (divideInteger !2 !1) ])) ])
                            [!6]))
                      ((\!0 !0 ->
                          (\!0 ->
                             (\!0 ->
                                force
                                  (case
                                     (constr 0
                                        [ (lessThanEqualsInteger !2 !1)
                                        , (delay (!7 !1 !2))
                                        , (delay (!7 !2 !1)) ])
                                     [!9]))
                               (!7 !2))
                            (!6 !2))
                         !2
                         !1)))
              ((\!0 ->
                  (\!0 -> !2 (\!0 -> !2 !2 !1)) (\!0 -> !2 (\!0 -> !2 !2 !1)))
                 (\!0 !0 !0 ->
                    force
                      (case
                         (constr 0
                            [ (equalsInteger !1 0)
                            , (delay !2)
                            , (delay (!3 !1 (modInteger !2 !1))) ])
                         [!5]))))
           (\!0 ->
              force
                (case
                   (constr 0
                      [ (lessThanEqualsInteger !1 0)
                      , (delay (!3 !1))
                      , (delay !1) ])
                   [!2])))
        (force ifThenElse))
     (\!0 -> subtractInteger 0 !1))
properFraction.-3/2 program
  1.0.0
  ((\!0 ->
      (\!0 ->
         (\!0 ->
            (\!0 ->
               (\!0 ->
                  (\!0 ->
                     case
                       ((\!0 ->
                           (\!0 ->
                              constr 0
                                [ !1
                                , (case
                                     !2
                                     [ (\!0 !0 ->
                                          case
                                            (constr 0 [!3, 1])
                                            [ (\!0 !0 ->
                                                 !8
                                                   (subtractInteger
                                                      (multiplyInteger !4 !1)
                                                      (multiplyInteger !2 !3))
                                                   (multiplyInteger
                                                      !3
                                                      !1)) ]) ]) ])
                             (case !1 [quotientInteger]))
                          (!1 (constr 0 [-3, 1]) (constr 0 [2, 1])))
                       [ (\!0 !0 ->
                            force
                              (case
                                 (constr 0
                                    [ (equalsInteger !2 -1)
                                    , (delay
                                         (case
                                            !1
                                            [ (\!0 !0 ->
                                                 case
                                                   (!5
                                                      (constr 0 [-1, 1])
                                                      (constr 0 [2, 1]))
                                                   [ (\!0 !0 ->
                                                        equalsInteger
                                                          (multiplyInteger
                                                             !1
                                                             !4)
                                                          (multiplyInteger
                                                             !2
                                                             !3)) ]) ]))
                                    , (delay False) ])
                                 [!7])) ])
                    (\!0 !0 ->
                       case
                         !2
                         [ (\!0 !0 ->
                              case
                                !3
                                [ (\!0 !0 ->
                                     (\!0 ->
                                        force
                                          (case
                                             (constr 0
                                                [ (equalsInteger !1 0)
                                                , (delay
                                                     (force
                                                        (force trace
                                                           "Cannot divide by zero"
                                                           (delay error))))
                                                , (delay
                                                     (!8
                                                        (multiplyInteger !5 !2)
                                                        !1)) ])
                                             [!11]))
                                       (multiplyInteger !3 !2)) ]) ]))
                 (\!0 !0 ->
                    (\!0 ->
                       force
                         (case
                            (constr 0
                               [ (lessThanEqualsInteger !2 0)
                               , (delay
                                    (constr 0
                                       [ (!7 (divideInteger !3 !1))
                                       , (!7 (divideInteger !2 !1)) ]))
                               , (delay
                                    (constr 0
                                       [ (divideInteger !3 !1)
                                       , (divideInteger !2 !1) ])) ])
                            [!6]))
                      ((\!0 !0 ->
                          (\!0 ->
                             (\!0 ->
                                force
                                  (case
                                     (constr 0
                                        [ (lessThanEqualsInteger !2 !1)
                                        , (delay (!7 !1 !2))
                                        , (delay (!7 !2 !1)) ])
                                     [!9]))
                               (!7 !2))
                            (!6 !2))
                         !2
                         !1)))
              ((\!0 ->
                  (\!0 -> !2 (\!0 -> !2 !2 !1)) (\!0 -> !2 (\!0 -> !2 !2 !1)))
                 (\!0 !0 !0 ->
                    force
                      (case
                         (constr 0
                            [ (equalsInteger !1 0)
                            , (delay !2)
                            , (delay (!3 !1 (modInteger !2 !1))) ])
                         [!5]))))
           (\!0 ->
              force
                (case
                   (constr 0
                      [ (lessThanEqualsInteger !1 0)
                      , (delay (!3 !1))
                      , (delay !1) ])
                   [!2])))
        (force ifThenElse))
     (\!0 -> subtractInteger 0 !1))
properFraction.-4/3 program
  1.0.0
  ((\!0 ->
      (\!0 ->
         (\!0 ->
            (\!0 ->
               (\!0 ->
                  (\!0 ->
                     case
                       ((\!0 ->
                           (\!0 ->
                              constr 0
                                [ !1
                                , (case
                                     !2
                                     [ (\!0 !0 ->
                                          case
                                            (constr 0 [!3, 1])
                                            [ (\!0 !0 ->
                                                 !8
                                                   (subtractInteger
                                                      (multiplyInteger !4 !1)
                                                      (multiplyInteger !2 !3))
                                                   (multiplyInteger
                                                      !3
                                                      !1)) ]) ]) ])
                             (case !1 [quotientInteger]))
                          (!1 (constr 0 [-4, 1]) (constr 0 [3, 1])))
                       [ (\!0 !0 ->
                            force
                              (case
                                 (constr 0
                                    [ (equalsInteger !2 -1)
                                    , (delay
                                         (case
                                            !1
                                            [ (\!0 !0 ->
                                                 case
                                                   (!5
                                                      (constr 0 [-1, 1])
                                                      (constr 0 [3, 1]))
                                                   [ (\!0 !0 ->
                                                        equalsInteger
                                                          (multiplyInteger
                                                             !1
                                                             !4)
                                                          (multiplyInteger
                                                             !2
                                                             !3)) ]) ]))
                                    , (delay False) ])
                                 [!7])) ])
                    (\!0 !0 ->
                       case
                         !2
                         [ (\!0 !0 ->
                              case
                                !3
                                [ (\!0 !0 ->
                                     (\!0 ->
                                        force
                                          (case
                                             (constr 0
                                                [ (equalsInteger !1 0)
                                                , (delay
                                                     (force
                                                        (force trace
                                                           "Cannot divide by zero"
                                                           (delay error))))
                                                , (delay
                                                     (!8
                                                        (multiplyInteger !5 !2)
                                                        !1)) ])
                                             [!11]))
                                       (multiplyInteger !3 !2)) ]) ]))
                 (\!0 !0 ->
                    (\!0 ->
                       force
                         (case
                            (constr 0
                               [ (lessThanEqualsInteger !2 0)
                               , (delay
                                    (constr 0
                                       [ (!7 (divideInteger !3 !1))
                                       , (!7 (divideInteger !2 !1)) ]))
                               , (delay
                                    (constr 0
                                       [ (divideInteger !3 !1)
                                       , (divideInteger !2 !1) ])) ])
                            [!6]))
                      ((\!0 !0 ->
                          (\!0 ->
                             (\!0 ->
                                force
                                  (case
                                     (constr 0
                                        [ (lessThanEqualsInteger !2 !1)
                                        , (delay (!7 !1 !2))
                                        , (delay (!7 !2 !1)) ])
                                     [!9]))
                               (!7 !2))
                            (!6 !2))
                         !2
                         !1)))
              ((\!0 ->
                  (\!0 -> !2 (\!0 -> !2 !2 !1)) (\!0 -> !2 (\!0 -> !2 !2 !1)))
                 (\!0 !0 !0 ->
                    force
                      (case
                         (constr 0
                            [ (equalsInteger !1 0)
                            , (delay !2)
                            , (delay (!3 !1 (modInteger !2 !1))) ])
                         [!5]))))
           (\!0 ->
              force
                (case
                   (constr 0
                      [ (lessThanEqualsInteger !1 0)
                      , (delay (!3 !1))
                      , (delay !1) ])
                   [!2])))
        (force ifThenElse))
     (\!0 -> subtractInteger 0 !1))
data.id.0.5 program 1.0.0 (constr 0 [1, 2])
data.id.2 program 1.0.0 (constr 0 [2, 1])
data.id.11/3 program
  1.0.0
  ((\!0 ->
      (\!0 ->
         (\!0 ->
            (\!0 ->
               case
                 (constr 0 [11, 1])
                 [ (\!0 !0 ->
                      case
                        (constr 0 [3, 1])
                        [ (\!0 !0 ->
                             (\!0 ->
                                force
                                  (case
                                     (constr 0
                                        [ (equalsInteger !1 0)
                                        , (delay
                                             (force
                                                (force trace
                                                   "Cannot divide by zero"
                                                   (delay error))))
                                        , (delay
                                             ((\!0 ->
                                                 (\!0 ->
                                                    force
                                                      (case
                                                         (constr 0
                                                            [ (lessThanEqualsInteger
                                                                 !3
                                                                 0)
                                                            , (delay
                                                                 (constr 0
                                                                    [ (!11
                                                                         (divideInteger
                                                                            !2
                                                                            !1))
                                                                    , (!11
                                                                         (divideInteger
                                                                            !3
                                                                            !1)) ]))
                                                            , (delay
                                                                 (constr 0
                                                                    [ (divideInteger
                                                                         !2
                                                                         !1)
                                                                    , (divideInteger
                                                                         !3
                                                                         !1) ])) ])
                                                         [!10]))
                                                   ((\!0 ->
                                                       (\!0 ->
                                                          force
                                                            (case
                                                               (constr 0
                                                                  [ (lessThanEqualsInteger
                                                                       !2
                                                                       !1)
                                                                  , (delay
                                                                       (!9
                                                                          !1
                                                                          !2))
                                                                  , (delay
                                                                       (!9
                                                                          !2
                                                                          !1)) ])
                                                               [!11]))
                                                         (!9 !3))
                                                      (!8 !1)))
                                                (multiplyInteger !5 !2))) ])
                                     [!8]))
                               (multiplyInteger !3 !2)) ]) ])
              ((\!0 ->
                  (\!0 -> !2 (\!0 -> !2 !2 !1)) (\!0 -> !2 (\!0 -> !2 !2 !1)))
                 (\!0 !0 !0 ->
                    force
                      (case
                         (constr 0
                            [ (equalsInteger !1 0)
                            , (delay !2)
                            , (delay (!3 !1 (modInteger !2 !1))) ])
                         [!5]))))
           (\!0 ->
              force
                (case
                   (constr 0
                      [ (lessThanEqualsInteger !1 0)
                      , (delay (!3 !1))
                      , (delay !1) ])
                   [!2])))
        (force ifThenElse))
     (\!0 -> subtractInteger 0 !1))
div by 0.1/0 program
  1.0.0
  ((\!0 ->
      (\!0 ->
         (\!0 ->
            (\!0 ->
               case
                 (constr 0 [1, 1])
                 [ (\!0 !0 ->
                      case
                        (constr 0 [0, 1])
                        [ (\!0 !0 ->
                             (\!0 ->
                                force
                                  (case
                                     (constr 0
                                        [ (equalsInteger !1 0)
                                        , (delay
                                             (force
                                                (force trace
                                                   "Cannot divide by zero"
                                                   (delay error))))
                                        , (delay
                                             ((\!0 ->
                                                 (\!0 ->
                                                    force
                                                      (case
                                                         (constr 0
                                                            [ (lessThanEqualsInteger
                                                                 !3
                                                                 0)
                                                            , (delay
                                                                 (constr 0
                                                                    [ (!11
                                                                         (divideInteger
                                                                            !2
                                                                            !1))
                                                                    , (!11
                                                                         (divideInteger
                                                                            !3
                                                                            !1)) ]))
                                                            , (delay
                                                                 (constr 0
                                                                    [ (divideInteger
                                                                         !2
                                                                         !1)
                                                                    , (divideInteger
                                                                         !3
                                                                         !1) ])) ])
                                                         [!10]))
                                                   ((\!0 ->
                                                       (\!0 ->
                                                          force
                                                            (case
                                                               (constr 0
                                                                  [ (lessThanEqualsInteger
                                                                       !2
                                                                       !1)
                                                                  , (delay
                                                                       (!9
                                                                          !1
                                                                          !2))
                                                                  , (delay
                                                                       (!9
                                                                          !2
                                                                          !1)) ])
                                                               [!11]))
                                                         (!9 !3))
                                                      (!8 !1)))
                                                (multiplyInteger !5 !2))) ])
                                     [!8]))
                               (multiplyInteger !3 !2)) ]) ])
              ((\!0 ->
                  (\!0 -> !2 (\!0 -> !2 !2 !1)) (\!0 -> !2 (\!0 -> !2 !2 !1)))
                 (\!0 !0 !0 ->
                    force
                      (case
                         (constr 0
                            [ (equalsInteger !1 0)
                            , (delay !2)
                            , (delay (!3 !1 (modInteger !2 !1))) ])
                         [!5]))))
           (\!0 ->
              force
                (case
                   (constr 0
                      [ (lessThanEqualsInteger !1 0)
                      , (delay (!3 !1))
                      , (delay !1) ])
                   [!2])))
        (force ifThenElse))
     (\!0 -> subtractInteger 0 !1))
div by 0.recip 0 program
  1.0.0
  ((\!0 ->
      (\!0 ->
         case
           (constr 0 [0, 1])
           [ (\!0 !0 ->
                force
                  (case
                     (constr 0
                        [ (equalsInteger !2 0)
                        , (delay
                             (force
                                (force trace
                                   "attempted to construct the reciprocal of zero"
                                   (delay error))))
                        , (delay
                             (force
                                (case
                                   (constr 0
                                      [ (lessThanEqualsInteger !2 0)
                                      , (delay (constr 0 [(!4 !1), (!4 !2)]))
                                      , (delay (constr 0 [!1, !2])) ])
                                   [!3]))) ])
                     [!3])) ])
        (force ifThenElse))
     (\!0 -> subtractInteger 0 !1))
div by 0.1/(1-1) program
  1.0.0
  ((\!0 ->
      (\!0 ->
         (\!0 ->
            (\!0 ->
               (\!0 ->
                  case
                    (constr 0 [1, 1])
                    [ (\!0 !0 ->
                         case
                           (case
                              (constr 0 [1, 1])
                              [ (\!0 !0 ->
                                   case
                                     (constr 0 [1, 1])
                                     [ (\!0 !0 ->
                                          !7
                                            (subtractInteger
                                               (multiplyInteger !4 !1)
                                               (multiplyInteger !2 !3))
                                            (multiplyInteger !3 !1)) ]) ])
                           [ (\!0 !0 ->
                                (\!0 ->
                                   force
                                     (case
                                        (constr 0
                                           [ (equalsInteger !1 0)
                                           , (delay
                                                (force
                                                   (force trace
                                                      "Cannot divide by zero"
                                                      (delay error))))
                                           , (delay
                                                (!6
                                                   (multiplyInteger !5 !2)
                                                   !1)) ])
                                        [!9]))
                                  (multiplyInteger !3 !2)) ]) ])
                 (\!0 !0 ->
                    (\!0 ->
                       force
                         (case
                            (constr 0
                               [ (lessThanEqualsInteger !2 0)
                               , (delay
                                    (constr 0
                                       [ (!7 (divideInteger !3 !1))
                                       , (!7 (divideInteger !2 !1)) ]))
                               , (delay
                                    (constr 0
                                       [ (divideInteger !3 !1)
                                       , (divideInteger !2 !1) ])) ])
                            [!6]))
                      ((\!0 !0 ->
                          (\!0 ->
                             (\!0 ->
                                force
                                  (case
                                     (constr 0
                                        [ (lessThanEqualsInteger !2 !1)
                                        , (delay (!7 !1 !2))
                                        , (delay (!7 !2 !1)) ])
                                     [!9]))
                               (!7 !2))
                            (!6 !2))
                         !2
                         !1)))
              ((\!0 ->
                  (\!0 -> !2 (\!0 -> !2 !2 !1)) (\!0 -> !2 (\!0 -> !2 !2 !1)))
                 (\!0 !0 !0 ->
                    force
                      (case
                         (constr 0
                            [ (equalsInteger !1 0)
                            , (delay !2)
                            , (delay (!3 !1 (modInteger !2 !1))) ])
                         [!5]))))
           (\!0 ->
              force
                (case
                   (constr 0
                      [ (lessThanEqualsInteger !1 0)
                      , (delay (!3 !1))
                      , (delay !1) ])
                   [!2])))
        (force ifThenElse))
     (\!0 -> subtractInteger 0 !1))
